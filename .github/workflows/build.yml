name: Build
on:
  workflow_call:
    inputs:
      upload-artifact:
        type: boolean
        default: true
      tag-name:
        type: string
        default: "draft"
      channel:
        type: string
        default: "dev"

env:
  IS_GITHUB_ACTIONS: 1
  CHANNEL: "${{ inputs.channel }}"
  FLUTTER_VERSION: '3.24.0'
  NDK_VERSION: r26d
  UPLOAD_ARTIFACT: "${{ inputs.upload-artifact }}"
  TAG_NAME: "${{ inputs.tag-name }}"
  TARGET_NAME_apk: "Hiddify-Android"
  TARGET_NAME_exe: "Hiddify-Windows-x64"
  TARGET_NAME_dmg: "Hiddify-MacOS"

jobs:
  test:
    outputs:
      draftBuildCode: ${{ steps.draftBuildCode.outputs.datetime }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2.16.0
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true
          
      - name: Prepare
        run: make linux-prepare
      - name: Test
        run: flutter test

      - name: make draftBuildCode
        id: draftBuildCode
        run: echo "::set-output name=datetime::$(date +'%d.%H.%M')"

  build:
    needs: test
    permissions: write-all
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: android-apk
            os: ubuntu-latest
            targets: apk

          - platform: windows
            os: windows-2019
            aarch: amd64
            targets: exe

          - platform: macos
            os: macos-13
            aarch: universal
            targets: dmg

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2.16.0
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Debug Environment Variables
        run: |
          echo "FLUTTER_VERSION: ${{ env.FLUTTER_VERSION }}"
          echo "NDK_VERSION: ${{ env.NDK_VERSION }}"
          echo "UPLOAD_ARTIFACT: ${{ env.UPLOAD_ARTIFACT }}"
          echo "TAG_NAME: ${{ env.TAG_NAME }}"

      - name: Setup Java
        if: startsWith(matrix.platform,'android')
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup NDK
        if: startsWith(matrix.platform,'android')
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: ${{ env.NDK_VERSION }}
          add-to-path: true
          link-to-sdk: true

      - name: Setup Gradle
        if: startsWith(matrix.platform,'android')
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 7.5

      - name: Setup dependencies
        run: |
          set -x  # 开启调试
          make ${{ matrix.platform }}-install-dependencies

      - name: Prepare for ${{ matrix.platform }}
        run: |
          set -x  # 开启调试
          make ${{ matrix.platform }}-prepare
          tree

      - name: Build ${{ matrix.platform }}
        env:
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
        run: |
          set -x  # 开启调试
          make ${{ matrix.platform }}-release || { echo "Build failed"; exit 1; }

      - name: Copy to out Android APK
        if: matrix.platform == 'android-apk'
        run: |
          mkdir out
          ls -R ./build/app/outputs
          cp ./build/app/outputs/flutter-apk/*arm64-v8a*.apk out/${TARGET_NAME_apk}-arm64.apk || echo "no arm64 apk"
          cp ./build/app/outputs/flutter-apk/*armeabi-v7a*.apk out/${TARGET_NAME_apk}-arm7.apk || echo "no arm7 apk"
          cp ./build/app/outputs/flutter-apk/*x86_64*.apk out/${TARGET_NAME_apk}-x86_64.apk || echo "no x64 apk"
          cp ./build/app/outputs/flutter-apk/app-release.apk out/${TARGET_NAME_apk}-universal.apk || echo "no universal apk"

      - name: Upload Artifact
        if: env.UPLOAD_ARTIFACT == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.platform}}
          path: ./out
          retention-days: 1

  update-draft:
    permissions: write-all
    if: ${{ inputs.upload-artifact }}
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          pattern: "*"
          path: ./out/
          
      - name: Display Files Structure
        run: ls -R
        working-directory: ./out

      - name: Delete Current Release Assets
        uses: 8Mi-Tech/delete-release-assets-action@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: 'draft'
          deleteOnlyFromDrafts: false
          
      - name: Prepare Release Message
        run: |
          pip install gitchangelog pystache mustache markdown
          prelease=$(curl --silent "https://api.github.com/repos/hiddify/hiddify-next/releases/latest" | grep -Po '"tag_name": "\K.*?(?=")')
          current="${{ github.ref_name }}"
          sed 's|RELEASE_TAG|${{ env.TAG_NAME }}|g' ./.github/release_message.md > release.md
          echo -e "\n\n<details markdown=1><summary>All changes from $current to the latest commit:</summary>\n\n">>release.md
          gitchangelog "${prelease}.." >> release.md 2>&1 || echo "Error in gitchangelog"
          echo -e "\n\n</details>">>release.md
      - name: Create or Update Draft Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: ./out/*
          name: 'draft'
          tag_name: 'draft'
          body_path: './release.md'
          prerelease: true

  upload-release:
    permissions: write-all
    if: ${{ inputs.upload-artifact && inputs.tag-name != 'draft' }}
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          pattern: "*"
          path: ./out/

      - name: Display Files Structure
        run: |
          ls -R ./out
          ls -R ./.github/
          ls -R ./.git/
          mv out/hiddify-android-market.aab  hiddify-android-market.aab

      - name: Prepare Release Message
        run: |
          sed 's|RELEASE_TAG|${{ env.TAG_NAME }}|g' ./.github/release_message.md >> release.md
